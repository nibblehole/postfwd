postfwd3 2.00-pre1
==================
- code:    First public pre-release Version of postfwd3.
	   This release will obsolete postfwd1 and postfwd2 when
	   it leaves pre-release stage.

- code:	   General:
	   postfwd3 lets you choose between Multiplex and PreFork personality.
	   Please look at the manpage or at postfwd.org/doc.html for the
	   --personality argument. if not specified, postfwd chooses the
	   personality-type by the program-name ("postfwd" and "postfwd1" mean
	   "Multiplex", "postfwd2" means PreFork).
- code:    postfwd now takes commands as arguments, e.g.
	   'postfwd stop' or 'postfwd reload'. Please see the manpage
	   for more information

- feature: Dynamic groups:
	   Dynamic groups allow to store request items like "client_address"
	   or "sender" in groups, which can be queried or modified at
	   runtime. Please read the manual section about "DYNAMIC GROUPS".
- feature: arguments --load_groups and --keep_groups allows to save
	   the contents of the dynamic group cache

- code:    IPv6 support:
	   postfwd3 optionally uses NetAddr:IP for cidr-compare functions
	   if available, which allows better IPv6 matching. Please note
	   that former versions used regex-matching for v6 addresses and
	   adapt your rulesets if required.
- code:    IPv6 Support (requires NetAddr::IP module) for
	   dnsbl lookups (fixed 'reverse_address' item)
	   Use the --ipv6_dnsbl switch to enable this feature

- feature: Docker support:
	   Since version 1.36+ postfwd can be run in a docker container.
	   Script: postfwd-docker: shortcut to run postfwd commands in
	   a container (found in docker/postfwd-docker.sh in the tarball)
	   Please visit https://postfwd.org/docker for more information.

- feature: Performance optimisation:
	   lists of ip and network objects will now be aggregated
	   automatically using Net::Addr->Compact() function.
	   This can be disabled by the --noaggregate_addrs switch
- feature: argument --cacheid_md5, --nocacheid_md5 for short
	   automatic cacheids (optionally requires Digest::MD5)
- code:    Performance and memory tuning (mainly hash -> hashref).
	   **********************************************************
	   ** This breaks existing plugins! The <request> argument **
           ** is now called as hash reference instead of a hash!   **
           ** Please look at the manual for more info.             **
	   **********************************************************

- bugfix:  several small fixes (logging, argument-combinations, ...)

- ToDo:	   review man-page and examples

